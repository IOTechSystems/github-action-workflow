###########################################################
# Copyright (C) 2022 IOTech Ltd
###########################################################

name: golangci-lint

on:
  workflow_call:
    inputs:
      WORKING_DIRECTORY:
        description: The working directory, default is project root.
        required: false
        type: string
        default: "."
      GO_LINT_CONFIG_PATH:
        # https://golangci-lint.run/usage/configuration#config-file
        description: The GolangCI-Lint config path, default is no config.
        required: false
        type: string
      REQUIRED_PACKAGES:
        description: The required packages are installed by apt, seperate the packages with spaces.
        required: false
        type: string

permissions:
  contents: read
 
jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    env:
      GOLANGCI_LINT_VERSION: v1.42.1
      GOLANGCI_LINT_FLAGS: --print-issued-lines --max-same-issues 50
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      # Install Golang
      - uses: actions/setup-go@v3
        with:
          # Retrieve go version from go.mod
          go-version-file: "${{ inputs.WORKING_DIRECTORY }}/go.mod"   
      - name: Install required packages
        if: ${{ inputs.REQUIRED_PACKAGES != '' }}
        run: |
          sudo apt update && sudo apt install ${{ inputs.REQUIRED_PACKAGES }}
      - name: Run go mod tidy
        working-directory: ${{ inputs.WORKING_DIRECTORY }}
        run: |
          go mod tidy     
      # Run Go linters       
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: ${{ env.GOLANGCI_LINT_VERSION }}

          # Optional: working directory, useful for monorepos
          working-directory: ${{ inputs.WORKING_DIRECTORY }}

          # Optional: golangci-lint command line arguments.
          args: "${{ env.GOLANGCI_LINT_FLAGS }} ${{ inputs.GO_LINT_CONFIG_PATH != '' && format('--config {0}', inputs.GO_LINT_CONFIG_PATH) || '--no-config' }}"
          skip-cache: true

